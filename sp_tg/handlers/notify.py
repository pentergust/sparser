"""–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –±–æ—Ç–∞.

–ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —Å–∏—Å—Ç–µ–º—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –±–æ—Ç–∞.

- –í–∫–ª—é—á–∏—Ç—å –ª–∏–∏ –æ—Ç–∫–ª—é—á–∏—Ç—å —Ä–∞—Å—Å–ª—ã–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.
- –í–∫–ª—é—á–∏—Ç—å –∏–ª–∏ –æ—Ç–∫–ª—é—á–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É —Ä–∞—Å–ø–∏—Å–Ω–∞–∏—è –≤ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–π —á–∞—Å.
"""

from aiogram import F, Router
from aiogram.filters import Command
from aiogram.filters.callback_data import CallbackData
from aiogram.types import (CallbackQuery, InlineKeyboardButton,
                           InlineKeyboardMarkup, Message)

from sp.messages import SPMessages

router = Router(name=__name__)


class NotifyCallback(CallbackData, prefix="notify"):
    """–ò—Å–ø–æ–ª—å—É–µ—Ç—Å—è –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    action (str): –ö–∞–∫–æ–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ: add, remove, on, off.
    hour (int): –î–ª—è –∫–∞–∫–æ–≥–æ —á–∞—Å–∞ –ø—Ä–∏–º–µ–Ω—è—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏–µ.

    - on: –í–∫–ª—é—á–∏—Ç—å —É–≤–¥–æ–º–ª–µ–Ω–∏—è.
    - off: –û—Ç–∫–ø–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.
    - add: –í–∫–ª—é—á–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–π —á–∞—Å.
    - remove: –û—Ç–∫–ª—é—á–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–π —á–∞—Å.
    """

    action: str
    hour: int


def get_notify_keyboard(enabled: bool, hours: list[int]
) -> InlineKeyboardMarkup:
    """–í–æ–∑–≤—Ä–∞—â–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.

    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ–ø–æ–≤–µ—â–µ–Ω–∏—è–º–∏.
    –ü–æ–∑–≤–æ–ª—è–µ—Ç –≤–∫–ª—é—á–∏—Ç—å/–æ—Ç–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.
    –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –¥–Ω–∏ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è.
    –°–±—Ä–æ–∏—Å–∏—Ç—å –≤—Å–µ —á–∞—Å—ã —Ä–∞—Å—Å—ã–ª–∫–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è.

    Buttons:

    - notify:on:0 => –í–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –±–æ—Ç–∞.
    - notify:off:0 => –û—Ç–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –±–æ—Ç–∞.
    - notify:reset:0 => –°–±—Ä–æ—Å–∏—Ç—å —á–∞—Å—ã –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ —Ä–∞—Å–ø–∏—Å–Ω–∏—è.
    - notify:add:{hour} => –í–∫–ª—é—á–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —á–∞—Å–∞.
    - notify:remove:{hour} => –û—Ç–∫–ª—é—á–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —á–∞—Å–∞.

    :param enabled: –í–∫–ª—é—á–µ–Ω—ã –ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    :type enabled: bool
    :param hours: –í –∫–∞–∫–∏–µ —á–∞—Å—ã –Ω—É–∂–Ω–æ —Ä–∞—Å—Å—ã–ª–∞—Ç—å —Ä–∞—Å–ø–∏—Å–Ω–∞–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
    :type hours: list[int]
    :return: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.
    :rtype: InlineKeyboardMarkup
    """
    inline_keyboard = [[InlineKeyboardButton(text="‚óÅ", callback_data="home")]]

    # –µ—Å–ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ—Ç–∫–ª—é—á–µ–Ω—ã, –Ω–∞–º –Ω—É–∂–Ω–æ —Ç–æ–ª—å–∫–æ –∫–Ω–æ–ø–∫–∞ –≤–∫–ª—é—á–µ–Ω–∏—è
    if not enabled:
        inline_keyboard[0].append(InlineKeyboardButton(
                text="üîî –í–∫–ª—é—á–∏—Ç—å", callback_data="notify:on:0"
            )
        )
    else:
        # –ö–Ω–æ–ø–∫–∞ –≤—ã–∫–ª—é—á–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        inline_keyboard[0].append(InlineKeyboardButton(
            text="üîï –í—ã–∫–ª—é—á–∏—Ç—å", callback_data="notify:off:0"
            )
        )
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —É–∫–∞–∑–∞–ª –∫–∞–∫–æ–π-—Ç–æ —á–∞—Å, –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É
        # –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Å–±—Ä–æ—Å–∞ –≤—Å–µ–π —Ä–∞—Å—Å—Å—ã–ª–∫–∏ —Ä–∞—Å–ø–∏—Å–Ω–∞–∏—è.
        if hours:
            inline_keyboard[0].append(InlineKeyboardButton(
                text="‚ùå –°–±—Ä–æ—Å", callback_data="notify:reset:0"
                )
            )
        # –°–æ–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–∫–∏ –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–∞—Å—Å—ã–ª–∫–∏
        hours_line = []
        for i, x in enumerate(range(6, 24)):
            if x % 6 == 0:
                inline_keyboard.append(hours_line)
                hours_line = []

            if x in hours:
                hours_line.append(
                    InlineKeyboardButton(
                        text=f"‚úîÔ∏è{x}", callback_data=f"notify:remove:{x}"
                    )
                )
            else:
                hours_line.append(InlineKeyboardButton(
                    text=str(x), callback_data=f"notify:add:{x}"
                    )
                )

        if len(hours_line):
            inline_keyboard.append(hours_line)

    return InlineKeyboardMarkup(inline_keyboard=inline_keyboard)

def get_notify_message(enabled: bool, hours: list[int]) -> str:
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Å—Ç–∞—Ç—É—Å–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.

    –°–æ–æ–±—â–µ–Ω–∏–µ –æ —Å—Ç–∞—Ç—É—Å–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —Å–æ–¥–µ—Ä–∂–∏—Ç –≤ —Å–µ–±–µ:
    –í–∫–ª—é—á–µ–Ω—ã –ª–∏ —Å–µ–π—á–∞—Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.
    –ö—Ä–∞—Ç–∫–∞—è –∏–Ω—Ñ–æ–º—Ä–∞—Ü–∏—è –æ–± —É–≤–µ–¥–æ–º–ª–µ–Ω—è—Ö.
    –í –∫–∞–∫–∏–µ —á–∞—Å—ã —Ä–∞—Å—Å—ã–ª–∞–µ—Ç—Å—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É—Ä–æ–∫–æ–≤.

    :param enabled: –í–∫–ª—é—á–µ–Ω—ã –ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    :type enabled: bool
    :param hours: –í –∫–∞–∫–∏–µ —á–∞—Å—ã –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
    :type hours: list[int]
    :return: –°–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ–º—Ä–∞—Ü–∏–µ–π –æ–± —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è—Ö.
    :rtype: str
    """
    if enabled:
        message = ("üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã."
            "\n–í—ã –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, –µ—Å–ª–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∏–∑–º–µ–Ω–∏—Ç—Å—è."
            "\n\n–¢–∞–∫–∂–µ –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è."
            "\n–í —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ –∫–ª–∞—Å—Å–∞."
        )
        if len(hours) > 0:
            message += "\n\n–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤: "
            message += ", ".join(map(str, set(hours)))
    else:
        message = "üîï —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–∫–ª—é—á–µ–Ω—ã.\n–ù–∏–∫–∞–∫–∏—Ö –ª–∏—à–Ω–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π."

    return message


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
# ================

@router.message(Command("notify"))
async def notify_handler(message: Message, sp: SPMessages):
    """–ü–µ—Ä–µ–≤–æ–¥–∏—Ç –≤ –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π."""
    enabled = sp.user["notifications"]
    hours = sp.user["hours"]
    await message.answer(
        text=get_notify_message(enabled, hours),
        reply_markup=get_notify_keyboard(enabled, hours),
    )


# –û–±—Ä–∞–±–æ—Ç–∫–∞ Callback –∑–∞–ø—Ä–æ—Å–æ–≤
# ===========================

@router.callback_query(F.data == "notify")
async def notify_callback(query: CallbackQuery, sp: SPMessages) -> None:
    """–ü–µ—Ä–µ—Ö–æ–¥–∏—Ç –∫ —Ä–∞–∑–¥–µ–ª—É –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π."""
    enabled = sp.user["notifications"]
    hours = sp.user["hours"]
    await query.message.edit_text(
        text=get_notify_message(enabled, hours),
        reply_markup=get_notify_keyboard(enabled, hours),
    )

@router.callback_query(NotifyCallback.filter())
async def notify_mod_callback(
    query: CallbackQuery, sp: SPMessages, callback_data: NotifyCallback
) -> None:
    """–ü—Ä–∏–º–µ–Ω—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫ —Å–∏—Å—Ç–µ–º–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º.

    - –û—Ç–∫–ª—é—á–∏—Ç—å –∏–ª–∏ –≤–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–ª–º–ª–µ–Ω–∏—è.
    - –í–∫–ª—é—á–∏—Ç—å –∏–ª–∏ –æ—Ç–∫–ª—é—á–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É –≤ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–π —á–∞—Å.
    - –°–±—Ä–æ—Å–∏—Ç—å –≤—Ä–µ–º—è —Ä–∞—Å—Å—ã–ª–∫–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è.
    """
    # –í–∫–ª—é—á–∞–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É –≤—Å–µ—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    if callback_data.action == "on":
        sp.user["notifications"] = True

    # –û—Ç–∫–ª—é—á–∞–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É –≤—Å–µ—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    elif callback_data.action == "off":
        sp.user["notifications"] = False

    # –í–∫–ª—é—á–∞–µ—Ç —Ä–∞—Å—Å–ª—ã–∫—É —Ä–∞—Å–ø–∏—Å–Ω–∞–∏—è –≤ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–π —á–∞—Å
    elif callback_data.action == "add":
        if callback_data.hour not in sp.user["hours"]:
            sp.user["hours"].append(callback_data.hour)

    # –û—Ç–∫–ª—é—á–∞–µ—Ç —Ä–∞—Å—Å–ª—ã–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω—è–∏ –≤ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–π —á–∞—Å
    elif callback_data.action == "remove":
        if callback_data.hour in sp.user["hours"]:
            sp.user["hours"].remove(callback_data.hour)

    # –°–±—Ä–∞—Å—ã–≤–∞–µ—Ç —Ä–∞—Å—Å–ª—ã–∫—É —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –≤ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–π —á–∞—Å—ã
    elif callback_data.action == "reset":
        sp.user["hours"] = []

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    sp.save_user()
    enabled = sp.user["notifications"]
    hours = sp.user["hours"]

    # –û–±–Ω–æ–≤–ª–µ–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Å—Ç–∞—Ç—É—Å–µ –∏ –æ–±–Ω–æ–≤–ª–µ—è–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è
    # –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    await query.message.edit_text(
        text=get_notify_message(enabled, hours),
        reply_markup=get_notify_keyboard(enabled, hours),
    )
