"""
–¢–µ–ª–µ–≥—Ä–∞–º–º –±–æ—Ç, –æ—Ç–ø—Ä–∞–≤–ª—è—é—â–∏–π —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É—Ä–æ–∫–æ–≤.
–Ø–≤–ª—è–µ—Ç—Å—è –æ–±—ë—Ä—Ç–∫–æ–π –Ω–∞–¥ SceduleParser.

Author: –ê—Ä—Ç—ë–º –ë–µ—Ä–µ–∑–∏–Ω
Modifired: Milinuri Nirvalen
Ver: sp 1.0
"""

from tparser import ScheduleParser

from datetime import datetime

import telebot


# –ù–µ–µ–∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∫—Ä–∏–ø—Ç–∞
API_TOKEN = ""
bot = telebot.TeleBot(API_TOKEN)
days = ["–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", "–≤—Ç–æ—Ä–Ω–∏–∫", "—Å—Ä–µ–¥–∞", "—á–µ—Ç–≤–µ—Ä–≥", "–ø—è—Ç–Ω–∏—Ü–∞", "—Å—É–±–±–æ—Ç—É",
        "—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è", "—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞"]

# –°–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –±–æ—Ç–∞ –≤ –ø–µ—Ä–≤—ã–π —Ä–∞–∑
start_text = """
üßæ –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π! –Ø - –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π —Ä–∞—Å—Å—ã–ª–∞–µ—Ç –≤–∞–º –≤–∞—à–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ!
‚ùì –í–≤–µ–¥–∏—Ç–µ /help –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞.
‚ùó –í–Ω–∏–º–∞–Ω–∏–µ, –±–æ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ, –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –µ—â—ë –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω—ã!
üîé –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ –¥–æ—Ä–∞–±–æ—Ç–∫–µ: https://t.me/optemikk"""


# –§—É–∫–Ω–∫—Ü–∏–∏ –¥–ª—è –¢–µ–ª–µ–≥—Ä–∞–º–º –±–æ—Ç–∞
# ===========================

def return_to_home(mag, sp):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω –±–æ—Ç–∞."""
    keyboard = telebot.types.ReplyKeyboardMarkup(True)
    keyboard.add("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å")
    keyboard.add("–í—ã–±—Ä–∞—Ç—å –∫–ª–∞—Å—Å")
    keyboard.add(f"–í—ã–±—Ä–∞–Ω –∫–ª–∞—Å—Å: {sp.user['clas_let']}")
    # keyboard.add("–°–ø–∏—Å–æ–∫ –∏–∑–º–µ–Ω–µ–Ω–∏–π")
    bot.reply_to(msg, "‚úÖ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=keyboard)

def change_class(msg, sp):
    """–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∫–ª–∞—Å—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    
    if msg.text.lower() == "–æ—Ç–º–µ–Ω–∞":
        bot.reply_to(msg, "‚úÖ –í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∫–ª–∞—Å—Å–∞!")
    else:
        bot.reply_to(msg, sp.change_class(msg.text.lower()))

    return_to_home(msg, sp)

def send_keyboard(msg):
    """–í—ã–≤–æ–¥ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã."""
    
    keyboard = telebot.types.ReplyKeyboardMarkup(True)
    keyboard.add("–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞")
    keyboard.add("–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è")
    keyboard.add("–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", "–í—Ç–æ—Ä–Ω–∏–∫", "–°—Ä–µ–¥–∞")
    keyboard.add("–ß–µ—Ç–≤–µ—Ä–≥", "–ü—è—Ç–Ω–∏—Ü–∞", "–°—É–±–±–æ—Ç–∞")
    keyboard.add("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é")
    bot.reply_to(msg, f"üßæ –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –∏ –ø–æ–ª—É—á–∏—Ç—å —Ä–µ–∞—Å–ø–∏—Å–∞–Ω–∏–µ!", 
                 reply_markup=keyboard)
        

# –û—Å–Ω–æ–≤–Ω–∞—è —á–∞—Å—Ç—å –±–æ—Ç–∞
# ===================

@bot.message_handler(commands=["start"])
def start(msg):
    keyboard = telebot.types.ReplyKeyboardMarkup(True)
    bot.reply_to(msg, start_text, reply_markup=keyboard)

@bot.message_handler(content_types=["text"])
def handle_text(msg):
    text = msg.text.lower()
    sp = ScheduleParser(str(msg.chat.id))

    if text == "/help":
        return_to_home(msg, sp)
    
    elif text in days:
        if text == "—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è":
            today = datetime.today().weekday()
        elif text == "—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞":
            today = datetime.today().weekday()+1
        else:
            today = days.index(text)

        bot.reply_to(msg, sp.get_lessons(today))
    
    elif text == "–≤—ã–±—Ä–∞—Ç—å –∫–ª–∞—Å—Å":
        keyboard = telebot.types.ReplyKeyboardMarkup(True)
        keyboard.add("–û—Ç–º–µ–Ω–∞")
        bot.reply_to(msg, "‚úè –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∏ –±—É–∫–≤—É –í–∞—à–µ–≥–æ –∫–ª–∞—Å—Å–∞.",
                     reply_markup=keyboard)
        bot.register_next_step_handler(msg, change_class)
    
    elif text == "–≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é":
        return_to_home(msg, sp)
    
    elif text == "–ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å":
        send_keyboard(msg)

# –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
# ==============

if __name__ == "__main__":
    print("Start bot")
    bot.polling(none_stop=True, interval=0)
