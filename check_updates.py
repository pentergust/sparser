"""–°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è.

–†–∞–±–æ—Ç–∞–µ—Ç –≤ –ø–∞—Ä–µ —Å Teleram –±–æ—Ç–æ–º.
–î–∞–Ω–Ω—ã–µ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –±—É–¥—É—Ç –≤–∑—è—Ç—ã –∏–∑ env —Ñ–∞–π–ª–∞.

- –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
- –û–±–Ω–æ–≤–ª—è–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ.
- –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.
- –†–∞—Å—Å—ã–ª–∞–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è/–∑–∞–≤—Ç—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.
- –£–¥–∞–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.

Author: Milinuri Nirvalen
Ver: 0.11.4 (sp v6.1.7, telegram v2.5)
"""

import asyncio
from datetime import datetime
from os import getenv
from pathlib import Path

from aiogram import Bot
from aiogram.exceptions import TelegramForbiddenError
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from dotenv import load_dotenv
from loguru import logger

from sp.intents import Intent
from sp.messages import SPMessages
from sp.platform import Platform
from sp.users.storage import User

# –ó–∞–ø—É—Å–∫ –ø–ª—Ñ—Ç—Ñ–æ—Ä–º—ã –∏ TG –±–æ—Ç–∞
# ==========================

load_dotenv()
TELEGRAM_TOKEN = getenv("TELEGRAM_TOKEN")
bot = Bot(TELEGRAM_TOKEN)
logger.add("sp_data/updates.log")
_TIMETAG_PATH = Path("sp_data/last_update")

# –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –º–∏–≥—Ä–∏—Ä–æ–≤–∞–ª–∏ –≤—Å–ª–µ–¥—Å—Ç–≤–∏–∏
CHAT_MIGRATE_MESSAGE = (
    "‚ö†Ô∏è –£ –≤–∞—à–µ–≥–æ —á–∞—Ç–∞ —Å–º–µ–Ω–∏–ª—Å—è ID.\n"
    "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —á–∞—Ç–∞ –±—ã–ª–∏ –ø–µ—Ä–µ–º–µ—â–µ–Ω—ã."
)

# –§—É–Ω–∫–∫–∏–∏ –¥–ª—è —Å–±–æ—Ä–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä
# ===========================

def get_week_keyboard(cl: str) -> InlineKeyboardMarkup:
    """–ü–æ–ª—É—á–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –Ω–µ–¥–µ–ª—é.

    –ó–∞ –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç—è–º–∏ –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ –º–æ–¥—É–ª—é ``sptg``.
    """
    return InlineKeyboardMarkup(inline_keyboard=[[
        InlineKeyboardButton(text="üè†–î–æ–º–æ–π", callback_data="home"),
        InlineKeyboardButton(text="–ù–∞ –Ω–µ–¥–µ–ª—é", callback_data=f"sc:{cl}:week"),
        InlineKeyboardButton(text="‚ñ∑", callback_data=f"select_day:{cl}"),
    ]])

def get_updates_keyboard(cl: str) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º.

    –î–∞–Ω–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –≤ –º–µ—Å—Ç–µ —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º –æ–±
    –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏.
    –û–Ω–∞ —Å–æ–¥–µ—Ä–∂–µ—Ç –≤ —Å–µ–±–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –≤—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ä–∞–∑–¥–µ–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω—ã
    –ø—Ä–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∏–∑–º–µ–Ω–µ–Ω–∏–µ–º:

    - –í–µ—Ä–Ω—É—Ç—å—Å—è –¥–æ–º–æ–π.
    - –ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–ø–∏—Å–∫—É –∏–∑–º–µ–Ω–µ–Ω–π–∏.
    - –ü–æ–ª—É—á–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è/–∑–∞–≤—Ç—Ä–∞.
    """
    return InlineKeyboardMarkup(inline_keyboard=[[
        InlineKeyboardButton(text="‚óÅ", callback_data="home"),
        InlineKeyboardButton(
            text="–ò–∑–º–µ–Ω–µ–Ω–∏—è", callback_data=f"updates:last:0:{cl}:"
        ),
        InlineKeyboardButton(text="–£—Ä–æ–∫–∏", callback_data=f"sc:{cl}:today")
    ]])


# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
# ==========================================

async def process_update(
    bot: Bot,
    hour: int,
    platform: Platform,
    user: User
) -> None:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–ª—è –æ–¥–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∏–ª–∏ —á–∞—Ç–∞).

    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è/–∑–∞–≤—Ç—Ä–∞ –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–π —á–∞—Å –∏–ª–∏
    —Å–ø–∏—Å–æ–∫ –∏–∑–º–Ω–µ–Ω–∏–π –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏, –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏.

    :param bot: –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π.
    :type bot: Bot
    :param hour: –ö–∞–∫–æ–π —Å–µ–π—á–∞—Å —á–∞—Å.
    :type hour: int
    :param platform: –≠–∫–∑–µ–º–ø–ª—è—Ä –∑–∞–ø—É—â–µ–Ω–Ω–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã.
    :type platform: Platform
    :param user: –ö–∞–∫–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è.
    :type user: User
    """
    # –†–∞—Å—Å—ã–ª–∫–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–µ —á–∞—Å—ã
    if hour in user.data.hours:
        logger.info("Send schedule")
        await bot.send_message(user.uid,
            text=platform.today_lessons(user),
            reply_markup=get_week_keyboard(user.data.cl)
        )

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è—Ö
    updates = user.get_updates(platform.view.sc, save_users=False)
    if updates is None:
        return

    logger.info("Send comparc updates message")
    updates_message = platform.updates(updates, hide_cl=user.data.cl)
    if len(updates_message) > 4000:
        updates_message = "f\n< —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏–π >"

    await bot.send_message(user.uid,
        text=f"üéâ –£ –≤–∞—Å –∏–∑–º–µ–Ω–∏–ª–æ—Å—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ!\n{updates_message}",
        reply_markup=get_updates_keyboard(user.data.cl)
    )

def set_timetag(path: Path, timestamp: int) -> None:
    """–û—Å—Ç–∞–≤–ª—è–µ—Ç –≤—Ä–µ–º–µ–Ω–Ω—É—é –º–µ—Ç–∫—É –ø–æ—Å–ª–µ–¥–Ω–µ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–±–Ω–æ–ª–≤–µ–Ω–∏—è.

    –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å–∫—Ä–∏–ø—Ç–∞ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –≤ —Ñ–∞–π–ª –≤—Ä–µ–º–µ–Ω–Ω—É—é –º–µ—Ç–∫—É.
    –ú–µ—Ç–∫–∞ –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–≤–∞—Ç—å–Ω–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç–∞—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏
    —Å–∫—Ä–∏–ø—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π.

    Args:
        path (Path): –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –≤—Ä–µ–º–µ–Ω–Ω–æ–π –º–µ—Ç–∫–∏.
        timestamp (int): –í—Ä–µ–º–µ–Ω–Ω–∞—è UNIXtime –º–µ—Ç–∫–∞.

    """
    if not path.exists():
        path.parent.mkdir(parents=True, exist_ok=True)

    with open(path, "w") as f:
        f.write(str(timestamp))


# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–∫—Ä–∏–ø—Ç–∞
# =======================

async def main() -> None:
    platform = Platform(
        pid=1, name="Telegram updater",
        version="0.11", api_version=0
    )
    platform.view = SPMessages()
    now = datetime.now()
    remove_ids = []

    logger.info("Start of the update process...")
    for k, v in platform.users.get_users().items():
        # –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ—Ç–∫–ª—é—á–µ–Ω—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∏–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω
        # –∫–ª–∞—Å—Å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é -> –ø—Ä–æ–ø—É—Å–∫–∞–µ–º.
        if not v.notifications or not v.cl:
            continue

        # –ü–æ–ª—É—á–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        # TODO: –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–Ω–æ–≤—å –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è –∏–∑ —Ñ–∞–π–ª–∞ –Ω–∞
        # –∫–∞–∂–¥–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏
        user = platform.get_user(k)
        try:
            logger.debug("Process {}: {}", k, v)
            await process_update(bot, now.hour, platform, user)

        # –ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º:
        # –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞, –∏—Å–∫–ª—é—á–∏–ª –∏–∑ —á–∞—Ç–∞, –∏—Å—á–µ–∑ —Å–∞–º ->
        # –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—á–∞—Ç) –∏–∑ —Å–ø–∏—Å–∫–∞ —á–∞—Ç–æ–≤.
        except TelegramForbiddenError:
            remove_ids.append(k)

        # –õ–æ–≤–∏–º –≤—Å–µ –ø—Ä–æ—á–∏–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –∏—Ö –Ω–∞ —ç–∫—Ä–∞–Ω
        except Exception as e:
            logger.exception(e)

    # –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å - –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ñ–∞–π–ª
    if remove_ids:
        platform.users.remove_users(remove_ids)

    # –û—Å—Ç–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –º–µ—Ç–∫—É —É—Å–ø–µ—à–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    set_timetag(_TIMETAG_PATH, int(now.timestamp()))
    platform.users.save_users()


# –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
# =========================

if __name__ == '__main__':
    try:
        asyncio.run(main())
    except Exception as e:
        logger.exception(e)