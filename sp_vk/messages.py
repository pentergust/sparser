"""
C–æ–æ–±—â–µ–Ω–∏—è, –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –≤ –±–æ—Ç–µ.

Author: Milinuri Nirvalen
"""

from typing import Optional

from sp.messages import send_update
from sp.messages import send_counter
from sp.messages import SPMessages
from sp.parser import Schedule
from sp.intents import Intent

# –°—á—ë—Ç—á–∏–∫–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
from sp.counters import cl_counter
from sp.counters import days_counter
from sp.counters import group_counter_res
from sp.counters import index_counter


# –ì–ª–∞–≤–Ω–µ–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–ø—Ä–∞–≤–∫–∏ –±–æ—Ç–∞
HOME = ("üí° –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∏–º–µ—Ä—ã –∑–∞–ø—Ä–æ—Å–æ–≤:"
    "\n-- 7–≤ 6–∞ –Ω–∞ –∑–∞–≤—Ç—Ä–∞"
    "\n-- —É—Ä–æ–∫–∏ 6–∞ –Ω–∞ –≤—Ç–æ—Ä–Ω–∏–∫ —Å—Ä"
    "\n-- 312 –Ω–∞ –≤—Ç–æ—Ä–Ω–∏–∫ –ø—è—Ç–Ω–∏—Ü—É"
    "\n-- —Ö–∏–º–∏—è 228 6–∞ –≤—Ç–æ—Ä–Ω–∏–∫"
    "\n\nüè´ –í –∑–∞–ø—Ä–æ—Å–∞—Ö –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:"
    "\n* –£—Ä–æ–∫/–ö–∞–±–∏–Ω–µ—Ç: –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –µ–≥–æ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è."
    "\n* –ö–ª–∞—Å—Å—ã: –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ."
    "\n* –î–Ω–∏ –Ω–µ–¥–µ–ª–∏:"
    "\n-- –ï—Å–ª–∏ –¥–µ–Ω—å –Ω–µ —É–∫–∞–∑–∞–Ω - –Ω–∞ —Å–µ–≥–æ–¥–Ω—è/–∑–∞–≤—Ç—Ä–∞."
    "\n-- –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫-—Å—É–±–±–æ—Ç–∞ (–ø–Ω-—Å–±)."
    "\n-- –°–µ–≥–æ–¥–Ω—è, –∑–∞–≤—Ç—Ä–∞, –Ω–µ–¥–µ–ª—è."
    # "\n\nüåü –ö–∞–∫ –ø–∏—Å–∞—Ç—å –∑–∞–ø—Ä–æ—Å—ã? /tutorial"
)


INFO = (
    "üå≤ –¢–µ—Å—Ç–µ—Ä @errorgirl2007"
    "\nüå≤ –í–µ—Ä—Å–∏—è –±–æ—Ç–∞: 1.2 (17"
)

# –°–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏ —Å–º–µ–Ω–µ –∫–ª–∞—Å—Å–∞
SET_CLASS = ("–î–ª—è –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–π —Ä–∞–±–æ—Ç—ã –∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ —É–∫–∞–∑–∞—Ç—å –≤–∞—à –∫–ª–∞—Å—Å."
    "\n–í—ã —Å–º–æ–∂–µ—Ç–µ –±—ã—Å—Ç—Ä–æ –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∏ –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è."
    "\n–ü–æ—á–∏—Ç–∞—Ç—å –æ –≤—Å–µ—Ö –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞—Ö - /cl_features"
    "\n\nüåü –ü—Ä–æ—Å—Ç–æ —É–∫–∞–∂–∏—Ç–µ –∫–ª–∞—Å—Å —Å–ª–µ–¥—É—é—â–∏–º —Å–æ–æ–±—â–µ–Ω–∏–º (\"8–≤\")"
    "\n–ò–ª–∏ –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã /set_class (–ø—Ä–∏–º. /set_class 7–≤)"
    "\n\n–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –≤—ã–±–æ—Ä –∫–ª–∞—Å—Å–∞ –Ω–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É (/pass)."
    "\n\nüí° –í—ã –º–æ–∂–µ—Ç–µ —Å–º–µ–Ω–∏—Ç—å –∫–ª–∞—Å—Å –ø–æ–∑–∂–µ:"
    "\n-- —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É /set_class [–∫–ª–∞—Å—Å]."
    "\n-- –ö–ø–æ–Ω–∫—É C–º–µ–Ω–∏—Ç—å –∫–ª–∞—Å—Å."
)

# –ö–∞–∫–∏–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –ø–æ–ª—É—á–∞–µ—Ç —É–∫–∞–∑–∞–≤–≥–∏—Ö –∫–ª–∞—Å—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
CL_FEATURES = ("üåü –ï—Å–ª–∏ –≤—ã —É–∫–∞–∂–µ—Ç–µ –∫–ª–∞—Å—Å, —Ç–æ —Å–º–æ–∂–µ—Ç–µ:"
    "\n\n-- –ë—ã—Å—Ç—Ä–æ –ø–æ–ª—É—á–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –∫–ª–∞—Å—Å–∞, –∫–Ω–æ–ø–∫–æ–π –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é."
    "\n-- –ù–µ —É–∫–∑–∞—ã–≤–∞—Ç—å –≤–∞—à –∫–ª–∞—Å—Å –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–∞—Ö (–ø—Ä–∏–º. \"–ø–Ω\")."
    "\n-- –ü–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∏ —Ä–∞—Å—Å—ã–ª–∫—É —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –∫–ª–∞—Å—Å–∞."
    "\n-- –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –≤–∞—à–µ–≥–æ –∫–ª–∞—Å—Å–∞."
    "\n-- –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—á—ë—Ç—á–∏–∫ cl/lessons."
    "\n\nüíé –°–ø–∏—Å–æ–∫ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –º–æ–∂–µ—Ç –ø–æ–ø–æ–ª–Ω—è—Ç—å—Å—è."
)


def send_notify_info(enabled: bool, hours: list[int]) -> str:
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Å—Ç–∞—Ç—É—Å–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.

    –°–æ–æ–±—â–µ–Ω–∏–µ –æ —Å—Ç–∞—Ç—É—Å–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —Å–æ–¥–µ—Ä–∂–∏—Ç –≤ —Å–µ–±–µ:
    –í–∫–ª—é—á–µ–Ω—ã –ª–∏ —Å–µ–π—á–∞—Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.
    –ö—Ä–∞—Ç–∫–∞—è –∏–Ω—Ñ–æ–º—Ä–∞—Ü–∏—è –æ–± —É–≤–µ–¥–æ–º–ª–µ–Ω—è—Ö.
    –í –∫–∞–∫–∏–µ —á–∞—Å—ã —Ä–∞—Å—Å—ã–ª–∞–µ—Ç—Å—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É—Ä–æ–∫–æ–≤.

    Args:
        enabled (bool): –í–∫–ª—é—á–µ–Ω—ã –ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        hours (list[int]): –í –∫–∞–∫–∏–µ —á–∞—Å—ã –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.

    Returns:
        str: –°–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ–± —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è—Ö.
    """
    if enabled:
        message = ("üîî —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã."
            "\n–í—ã –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, –µ—Å–ª–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∏–∑–º–µ–Ω–∏—Ç—Å—è."
            "\n\n–¢–∞–∫–∂–µ –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è."
            "\n–í —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ –∫–ª–∞—Å—Å–∞."
        )
        if len(hours) > 0:
            message += "\n\n–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤: "
            message += ", ".join(map(str, set(hours)))
    else:
        message = "üîï —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–∫–ª—é—á–µ–Ω—ã.\n–ù–∏–∫–∞–∫–∏—Ö –ª–∏—à–Ω–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π."

    return message


def send_counter_message(sc: Schedule, counter: str, target: str) -> str:
    """–°–æ–±–∏—Ä–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ —Ä–∞–±–æ—Ç—ã —Å—á—ë—Ç—á–∏–∫–æ–≤.

    –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Å—á—ë—Ç—á–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é
    —Ñ—É–Ω–∫—Ü–∏—é —Å—á—ë—Ç—á–∏–∫–∞.

    +----------+-------------------------+
    | counter  | targets                 |
    +----------+-------------------------+
    | cl       | days, lessons. cabinets |
    | days     | cl, lessons. cabinets   |
    | lessons  | cl, days. main          |
    | cabinets | cl, days. main          |
    +----------+-------------------------+

    Args:
        sc (Schedule): –≠–∫–∑–µ–º–ø–ª—è—Ä —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è —É—Ä–æ–∫–æ–≤.
        counter (str): –¢–∏–ø —Å—á—ë—Ç—á–∏–∫–∞.
        target (str): –ì—Ä—É–ø–ø–∞ –ø—Ä–æ—Å–º—Ç–æ—Ä–∞ —Å—á—ë—Ç—á–∏–∫–∞.

    Returns:
        str: –°–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞–∞—Ç–º–∏ —Å—á—ë—Ç—á–∏–∫–∞.
    """
    message = f"‚ú® –°—á—ë—Ç—á–∏–∫ {counter}/{target}:"
    intent = Intent()

    if counter == "cl":
        if target == "lessons":
            intent = intent.construct(sc, cl=sc.cl)
        res = cl_counter(sc, intent)
    elif counter == "days":
        res = days_counter(sc, intent)
    elif counter == "lessons":
        res = index_counter(sc, intent)
    else:
        res = index_counter(sc, intent, cabinets_mode=True)

    if target == "none":
        target = None

    message += send_counter(group_counter_res(res), target=target)
    return message

def send_updates(
    update: Optional[list]=None, cl: Optional[str]=None,
) -> str:
    """–°–æ–±–∏—Ä–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü–µ–π —Å–ø–∏—Å–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è.

    Args:
        update (list, Optional): –°—Ç—Ä–∞–Ω—Ü–∏–∞ —Å–ø–∏—Å–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è.
        cl (str, Optional): –î–ª—è –∫–∞–∫–æ–≥–æ –∫–ª–∞—Å—Å–∞ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è.

    Returns:
        str: –°–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü–µ–π —Å–ø–∏—Å–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π.
    """
    message = "üîî –ò–∑–º–µ–Ω–µ–Ω–∏—è "
    message += " –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏:\n" if cl is None else f" –¥–ª—è {cl}:\n"

    if update is not None:
        update_text = send_update(update, cl=cl)

        if len(update_text) > 4000:
            message += "\nüìö –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏–π."
        else:
            message += update_text
    else:
        message += "‚ú® –ù–µ—Ç –Ω–æ–≤—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π."

    return message
